// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  STUDENT
  TEACHER
}

enum TokenType {
  EMAIL
  API
}

model User {
  id        String  @id @default(uuid())
  email     String  @unique
  firstName String?
  lastName  String?
  social    Json?
  isAdmin   Boolean @default(false)

  enrollments CourseEnrollment[]

  results TestResult[] @relation("results")

  graded TestResult[] @relation("graded")

  tokens Token[]
}

model Token {
  id         String    @id @default(uuid())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  type       TokenType
  emailToken String?   @unique // Only used for short lived email tokens
  valid      Boolean   @default(true)
  expiration DateTime

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model Course {
  id      String @id @default(uuid())
  name    String
  details String

  enrollments CourseEnrollment[]

  tests Test[]
}

model Test {
  id        String   @id @default(uuid())
  name      String
  date      DateTime
  updatedAt DateTime @updatedAt

  course   Course @relation(fields: [courseId], references: [id])
  courseId String

  results TestResult[]
}

model TestResult {
  id        String   @id @default(uuid())
  result    Int // Percent with one decimal multiplied by 10. Ex: 95.5 => 955
  createdAt DateTime @default(now())

  test   Test   @relation(fields: [testId], references: [id])
  testId String

  student   User   @relation(name: "results", fields: [studentId], references: [id])
  studentId String

  grader   User   @relation(name: "graded", fields: [graderId], references: [id])
  graderId String
}

model CourseEnrollment {
  role      UserRole
  createdAt DateTime @default(now())

  user   User   @relation(fields: [userId], references: [id])
  userId String

  course   Course @relation(fields: [courseId], references: [id])
  courseId String

  @@id([userId, courseId, role])
}
